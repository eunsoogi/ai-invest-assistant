---
name: Release

on:
  workflow_dispatch:
  push:
    branches:
      - release/**

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Versioning
        id: version
        run: |
          echo "version=$(cat version)" >> $GITHUB_OUTPUT

      - name: Restore build cache
        uses: actions/cache@v4
        with:
          path: |
            **/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-

      - name: Build and push
        uses: docker/bake-action@v5
        env:
          BUILD_TARGET: production
          IMAGE_REGISTRY: ghcr.io/eunsoogi
          IMAGE_NAME_PREFIX: kkalla
          IMAGE_TAG: ${{ steps.version.outputs.version }}
        with:
          push: true
          set: |
            api.cache-from=type=gha,scope=api
            api.cache-to=type=gha,scope=api,mode=max
            ui.cache-from=type=gha,scope=ui
            ui.cache-to=type=gha,scope=ui,mode=max

      - name: Export build cache
        uses: docker/bake-action@v5
        env:
          IMAGE_REGISTRY: ghcr.io/eunsoogi
          IMAGE_NAME_PREFIX: kkalla
          IMAGE_TAG: ${{ steps.version.outputs.version }}
        with:
          targets: cache
          set: |
            cache-ui.cache-from=type=gha,scope=ui
            cache-ui.cache-to=type=gha,scope=ui,mode=max
            cache-ui.output=type=local,dest=ui

  release:
    needs: build-and-push
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Versioning
        id: version
        run: |
          echo "version=$(cat version)" >> $GITHUB_OUTPUT

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          name: Release v${{ steps.version.outputs.version }}
          tag_name: v${{ steps.version.outputs.version }}
          target_commitish: ${{ github.sha }}
          generate_release_notes: true
